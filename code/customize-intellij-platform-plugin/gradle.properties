# IntelliJ Platform Artifacts Repositories
# -> https://plugins.jetbrains.com/docs/intellij/intellij-artifacts.html

pluginGroup = com.zync.intellij.platform.plugin
pluginName = CustomizePlugin
# SemVer format -> https://semver.org
pluginVersion = 1.0.0-SNAPSHOT

# IntelliJ Platform Properties -> https://github.com/JetBrains/gradle-intellij-plugin#intellij-platform-properties
platformType = IC
platformVersion = 2021.1.2

# version control
intellijPluginVersion = 1.3.0
commonsLang3Version = 3.12.0


# 以下为Gradle编译构建参数
# 开启守护进程来构建，取值范围：（true、false）默认为：true
# 停止现有守护进程：gradle --stop
org.gradle.daemon=true
# Gradle守护进程将在指定的空闲毫秒数后自行终止，默认为：10800000（3小时）
org.gradle.daemon.idletimeout=10800000
# Gradle守护进程的JVM参数，默认为：-Xms256m -Xmx512m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
org.gradle.jvmargs=-Xms1024m -Xmx2048m -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
# 开启并行编译，取值范围：（true、false）
org.gradle.parallel=true
# 开启缓存，Gradle将尽可能重用任何先前构建的任务输出，从而使构建速度更快，取值范围：（true、false）
org.gradle.caching=true
# 将在控制台上记录各个输入属性哈希值以及每个任务的构建缓存键，取值范围：（true、false）
#org.gradle.caching.debug=true
# 启用新的孵化模式，Gradle将尝试仅配置必要的项目，取值范围：（true、false）
#org.gradle.configureondemand=true
# 自定义控制台输出着色或详细程度，取值范围：（auto、plain、rich、verbose）默认值：取决于Gradle的调用方式
#org.gradle.console=auto
# Gradle运行构建将启用远程调试，侦听端口5005.请注意，这相当于添加-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005到JVM命令行，并将挂起虚拟机，直到连接调试器，取值范围：（true、false）默认是：false
#org.gradle.debug=false
# 指定Gradle构建过程的Java主目录。可以将值设置为jdk或jre的Path，但是，根据构建的功能，使用jdk会更安全。如果未指定设置，则会从您的环境（JAVA_HOME或路径java）派生合理的默认值
#org.gradle.java.home=
# 当设置为quiet，warn，lifecycle，info或debug时，Gradle将使用此日志级别。值不区分大小写。lifecycle级别是缺省值
#org.gradle.logging.level=lifecycle
# 设置为all，summary或者none，Gradle将使用不同的警告类型显示
#org.gradle.warning.mode=
# 配置后，Gradle最大将使用给定数量的工作者。默认值是CPU处理器数
#org.gradle.workers.max=
# 指定Gradle守护程序的调度优先级以及它启动的所有进程，取值范围：（low、normal）默认是：normal
#org.gradle.priority=normal
